
GrupoA

~/ensino/private/comp/e3/GrupoA ~/ensino/private/comp/e3
bison -d parser.y
flex -o scanner.lex.c  scanner.l
gcc -Wall -o etapa3 scanner.lex.c parser.tab.c valor_token.c ast.c main.c -lfl
scanner.lex.c:1605:16: warning: ‘input’ defined but not used [-Wunused-function]
 1605 |     static int input  (void)
      |                ^~~~~
scanner.lex.c:1562:17: warning: ‘yyunput’ defined but not used [-Wunused-function]
 1562 |     static void yyunput (int c, char * yy_bp )
      |                 ^~~~~~~
~/ensino/private/comp/e3

GrupoB

~/ensino/private/comp/e3/GrupoB ~/ensino/private/comp/e3
15c15
<   int ret = yyparse(); 
---
>   int ret = yyparse();
bison -d parser.y
flex scanner.l
gcc -c -w lex.yy.c parser.tab.c lexeme.c main.c ast.c
gcc -g -w -o etapa3 lex.yy.o main.o lexeme.o ast.o -lfl parser.tab.c
~/ensino/private/comp/e3

GrupoC

~/ensino/private/comp/e3/GrupoC ~/ensino/private/comp/e3
5a6
> #include "tree.h"
7a9
> extern int yyerror(char const *s);
9,11c11
< void *arvore = NULL;
< void exporta (void *arvore);
< void libera (void *arvore);
---
> tree *arvore = NULL;
15,20c15,19
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
---
>     int ret = yyparse();
>     exporta(arvore);
>     libera(arvore);
>     yylex_destroy();
>     return ret;
bison -d parser.y
flex scanner.l
gcc main.c tree.c lex.yy.c parser.tab.c -o etapa3 -lfl
~/ensino/private/comp/e3

GrupoE

~/ensino/private/comp/e3/GrupoE ~/ensino/private/comp/e3
1,4c1,7
< /*
<   Função principal para realização da E3.
<   Não modifique este arquivo.
< */
---
> #/********************************************************************** 
> # * INF01147 - Compiladores - Turma B (2022/1)                         *
> # *                                                                    *
> # *                                                                    *
> # * André Carini                                                       *
> # * Matheus Kovaleski                                                  *
> # **********************************************************************/
5a9,13
> #include "tree.h"
> #include "parser.tab.h" //arquivo gerado com bison -d parser.y
> #include "tree.h"
> 
> 
7a16
> extern int yyerror(char const *s);
10,11c19
< void exporta (void *arvore);
< void libera (void *arvore);
---
> 
15,16c23,24
<   int ret = yyparse(); 
<   exporta (arvore);
---
>   int ret = yyparse();
>   exporta(arvore);
21c29
< }
---
> }
\ No newline at end of file
rm -f etapa2
rm -f lex.yy.c
rm -f parser.tab.h
rm -f parser.tab.c
rm -f parser.output
rm -f test.c
flex scanner.l
bison -d parser.y
gcc -o etapa3 symbol.c tree.c parser.tab.c lex.yy.c main.c -I.
~/ensino/private/comp/e3

GrupoG

~/ensino/private/comp/e3/GrupoG ~/ensino/private/comp/e3
cc    -c -o main.o main.c
bison -v  parser.y
parser.y: warning: 1 shift/reduce conflict [-Wconflicts-sr]
parser.y: warning: 2 reduce/reduce conflicts [-Wconflicts-rr]
parser.y: note: rerun with option '-Wcounterexamples' to generate conflict counterexamples
flex scanner.l
gcc -c lex.yy.c parser.tab.c
gcc -c main.c ext_functions.c
gcc -o etapa3 lex.yy.o parser.tab.o ext_functions.o main.o -lfl
~/ensino/private/comp/e3

GrupoJ

~/ensino/private/comp/e3/GrupoJ ~/ensino/private/comp/e3
5a6
> #include "ast.h"
8d8
< 
12d11
< 
16c15
<   exporta (arvore);
---
>   exporta(arvore);
bison -d parser.y
parser.y:109.2: warning: empty rule for typed nonterminal, and no action [-Wother]
  109 | | ;
      |  ^
parser.y:112.18-31: warning: type clash on default action: <tree> != <> [-Wother]
  112 | variavel_global: tipo nomes ';';
      |                  ^~~~~~~~~~~~~~
parser.y:119.48-57: warning: type clash on default action: <tree> != <> [-Wother]
  119 | comando_simples: variavel_local | atribuicao | afirmacoes | entrada |...
      |                                                ^~~~~~~~~~
parser.y:120.17-32: warning: type clash on default action: <tree> != <> [-Wother]
  120 | variavel_local: tipo nomes_local | tipo TK_IDENTIFICADOR TK_OC_LE TK_...
      |                 ^~~~~~~~~~~~~~~~
parser.y:152.8-31: warning: type clash on default action: <tree> != <> [-Wother]
  152 | bloco: '{' comandos_simples '}';
      |        ^~~~~~~~~~~~~~~~~~~~~~~~
parser.y:158.7-22: warning: type clash on default action: <tree> != <> [-Wother]
  158 | else: TK_PR_ELSE bloco | ;
      |       ^~~~~~~~~~~~~~~~
parser.y:158.25: warning: empty rule for typed nonterminal, and no action [-Wother]
  158 | else: TK_PR_ELSE bloco | ;
      |                         ^
parser.y:180.3-19: warning: type clash on default action: <tree> != <> [-Wother]
  180 | | '(' expressao ')'
      |   ^~~~~~~~~~~~~~~~~
parser.y: warning: 5 shift/reduce conflicts [-Wconflicts-sr]
parser.y: note: rerun with option '-Wcounterexamples' to generate conflict counterexamples
flex scanner.l
gcc -c lex.yy.c main.c parser.tab.c
gcc -o etapa3 ast.c ast.h lex.yy.o parser.tab.o main.o -lfl
~/ensino/private/comp/e3

GrupoK

~/ensino/private/comp/e3/GrupoK ~/ensino/private/comp/e3
bison -d ./parser.y 
flex ./scanner.l
gcc -c main.c ast.c lex.yy.c parser.tab.c
gcc -g main.o ast.o lex.yy.o parser.tab.o -o etapa3 -lfl
~/ensino/private/comp/e3

GrupoM

~/ensino/private/comp/e3/GrupoM ~/ensino/private/comp/e3
2,3c2,3
<   Função principal para realização da E3.
<   Não modifique este arquivo.
---
> 		Função principal para realização da E3.
> 		Não modifique este arquivo.
5c5,6
< #include <stdio.h>
---
> #include "ast.h"
> 
10,11d10
< void exporta (void *arvore);
< void libera (void *arvore);
13c12
< int main (int argc, char **argv)
---
> int main(int argc, char **argv)
15,20c14,19
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
---
> 	int ret = yyparse();
> 	exporta(arvore);
> 	libera(arvore);
> 	arvore = NULL;
> 	yylex_destroy();
> 	return ret;
bison -d parser.y
flex scanner.l
gcc main.c ast.c lex.yy.c parser.tab.c -o etapa3 -lfl
rm lex.yy.c
rm parser.tab.c
~/ensino/private/comp/e3

GrupoO

~/ensino/private/comp/e3/GrupoO ~/ensino/private/comp/e3
15c15
<   int ret = yyparse(); 
---
>   int ret = yyparse();
flex scanner.l
bison -d parser.y --report-file=FILE
parser.y:140.10: warning: empty rule for typed nonterminal, and no action [-Wother]
  140 | 	|;
      |          ^
parser.y: warning: 29 shift/reduce conflicts [-Wconflicts-sr]
parser.y: warning: 1 reduce/reduce conflict [-Wconflicts-rr]
parser.y: note: rerun with option '-Wcounterexamples' to generate conflict counterexamples
gcc -g -c lex.yy.c main.c arvore.c parser.tab.c lexic_value.c
gcc -g -o etapa3 lex.yy.o parser.tab.o main.o arvore.o lexic_value.o -lfl
~/ensino/private/comp/e3

GrupoP

~/ensino/private/comp/e3/GrupoP ~/ensino/private/comp/e3
11a12
> void extern asd_print(void* tree);
16a18
>   asd_print(arvore);
18d19
<   arvore = NULL;
19a21
>   arvore = NULL;
21c23
< }
---
> }
\ No newline at end of file
bison -t -d -v parser.y
flex scanner.l
gcc -c asd.c lex.yy.c parser.tab.c main.c
gcc -o etapa3 asd.o lex.yy.o parser.tab.o main.o -lfl -lm
~/ensino/private/comp/e3

GrupoQ

~/ensino/private/comp/e3/GrupoQ ~/ensino/private/comp/e3
12a13,14
> 
> 
21c23
< }
---
> }
\ No newline at end of file
flex scanner.l
bison -d parser.y
gcc main.c hash.c AST.c lex.yy.c parser.tab.c -o etapa3 -lfl
~/ensino/private/comp/e3

GrupoR

~/ensino/private/comp/e3/GrupoR ~/ensino/private/comp/e3
5a6
> #include "ast.h"
15a17
>   
17c19
<   libera(arvore);
---
>   //libera(arvore);
bison -d parser.y
parser.y:104.9-17: warning: type clash on default action: <nodo> != <> [-Wother]
  104 | lista:  TK_PR_END 
      |         ^~~~~~~~~
parser.y:139.18-22: warning: type clash on default action: <nodo> != <> [-Wother]
  139 | comando_simples: break
      |                  ^~~~~
parser.y:140.18-25: warning: type clash on default action: <nodo> != <> [-Wother]
  140 | comando_simples: continue
      |                  ^~~~~~~~
parser.y:141.18-33: warning: type clash on default action: <nodo> != <> [-Wother]
  141 | comando_simples: entrada_ou_saida
      |                  ^~~~~~~~~~~~~~~~
parser.y:143.18-29: warning: type clash on default action: <nodo> != <> [-Wother]
  143 | comando_simples: chamada_func 
      |                  ^~~~~~~~~~~~
parser.y:154.18: warning: empty rule for typed nonterminal, and no action [-Wother]
  154 | atribuicao_local:
      |                  ^
parser.y:191.6: warning: empty rule for typed nonterminal, and no action [-Wother]
  191 | else:
      |      ^
flex -o lex.yy.c scanner.l
gcc -Wall -o etapa3 ast.c lex.yy.c parser.tab.c main.c -lfl -lm 
ast.c: In function ‘exporta’:
ast.c:113:9: warning: unused variable ‘counter’ [-Wunused-variable]
  113 |     int counter;
      |         ^~~~~~~
ast.c:112:13: warning: unused variable ‘aux’ [-Wunused-variable]
  112 |     node_t *aux;
      |             ^~~
lex.yy.c:1466:16: warning: ‘input’ defined but not used [-Wunused-function]
 1466 |     static int input  (void)
      |                ^~~~~
lex.yy.c:1423:17: warning: ‘yyunput’ defined but not used [-Wunused-function]
 1423 |     static void yyunput (int c, char * yy_bp )
      |                 ^~~~~~~
parser.y: In function ‘yyparse’:
parser.y:102:107: warning: returning ‘tree_t *’ {aka ‘struct tree *’} from a function with return type ‘int’ makes integer from pointer without a cast [-Wint-conversion]
  102 | programa: lista { tree_t *tree = new_tree($1) ; $$ = tree; arvore = tree; return tree;}
      |                                                                                                           ^   
parser.y:144:77: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  144 | lista_comando_simples: comando_simples ';' lista_comando_simples_cauda { if(strcmp($3->label,"")!=0){add_children($1, $3);}; $$ = $1; }
      |                                                                             ^~~~~~
In file included from parser.tab.c:99:
parser.y:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
    7 | %code requires { #include "ast.h" }
  +++ |+#include <string.h>
    8 | 
parser.y: In function ‘yyerror’:
parser.y:222:38: warning: implicit declaration of function ‘get_line_number’ [-Wimplicit-function-declaration]
  222 |         printf("Erro na linha %d\n", get_line_number());
      |                                      ^~~~~~~~~~~~~~~
~/ensino/private/comp/e3

GrupoW

~/ensino/private/comp/e3/GrupoW ~/ensino/private/comp/e3
1,21c1,21
< /*
<   Função principal para realização da E3.
<   Não modifique este arquivo.
< */
< #include <stdio.h>
< extern int yyparse(void);
< extern int yylex_destroy(void);
< 
< void *arvore = NULL;
< void exporta (void *arvore);
< void libera (void *arvore);
< 
< int main (int argc, char **argv)
< {
<   int ret = yyparse(); 
<   exporta (arvore);
<   libera(arvore);
<   arvore = NULL;
<   yylex_destroy();
<   return ret;
< }
---
> /*
>   Função principal para realização da E3.
>   Não modifique este arquivo.
> */
> #include <stdio.h>
> extern int yyparse(void);
> extern int yylex_destroy(void);
> 
> void *arvore = NULL;
> void exporta (void *arvore);
> void libera (void *arvore);
> 
> int main (int argc, char **argv)
> {
>   int ret = yyparse(); 
>   exporta (arvore);
>   libera(arvore);
>   arvore = NULL;
>   yylex_destroy();
>   return ret;
> }
\ No newline at end of file
bison -d -r all parser.y
flex -o parser.lex.c scanner.l
gcc -Wall -o etapa3 main.c asd.c valor_lexico.c parser.lex.c parser.tab.c -lfl -lm 
~/ensino/private/comp/e3
